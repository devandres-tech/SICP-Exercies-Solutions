;; Each of the following two procedures defines a method for adding two positive integers 
;; in terms of the procedures inc, which increments its argument by 1, and dec, which 
;; decrements its argument by 1.

(define (plus a b)
  (if (= a 0)
      b
      (inc (plus (dec a) b))))

(define (plus a b)
  (if (= a 0)
      b
      (plus (dec a) (inc b))))

;; Using the substitution model, illustrate the process generated by each procedure 
;; in evaluating (+ 4 5). Are these processes iterative or recursive?

;; Both are recursive procedures, both call itself. But both have different processes.

;; First one is a recursive process, the 'inc' operation is being deffered until
;; we evaluate the '+' procedure, that is when 'a' is 0
(plus 4 5)
(inc (plus 3 5))
(inc (inc (plus 2 5)))
(inc (inc (inc (plus 1 5))))
(inc (inc (inc (inc (plus 0 5)))))
(inc (inc (inc (inc 5))))
(inc (inc (inc 6)))
(inc (inc 7))
(inc (8))
9
;; alternative if inc was defined as:
; (define (inc x)
;;  (1 + x))
(plus 4 5)
(inc (+ 1 (plus 3 5)))
(inc (+ 1 (+ 1 (plus 2 5))))
(inc (+ 1 (+ 1 (+ 1 (plus 1 5)))))
(inc (+ 1 (+ 1 (+ 1 (+ 1 (plus 0 5))))))
(inc (+ 1 (+ 1 (+ 1 (+ 1 5)))))
(inc (+ 1 (+ 1 (+ 1 6))))
(inc (+ 1 (+ 1 7)))
(inc (+ 1 8))
9

;; second one is an iterative process, we keep track of the program by using the state
;; variables 'a' and 'b', where we decrement a and increment b for each iteration
;; this is also a tail-recursive procedure, that is, the last line is a call to itself.
(plus 4 5)
(plus 3 6)
(plus 2 7)
(plus 1 8)
(plus 0 9)
9
